Checking lock on dataItem: y
There is no write lock on: y
Checking lock on dataItem: y
Needed write lock
There is no read or write lock on: y
Checking lock on dataItem: x
There is no write lock on: x
Checking lock on dataItem: x
Needed write lock
There is no read or write lock on: x
Checking lock on dataItem: y
There is a a write lock on: y
Checking lock on dataItem: z
There is no write lock on: z
Checking lock on dataItem: a
There is no write lock on: a
Checking lock on dataItem: b
There is no write lock on: b
Checking lock on dataItem: z
Needed write lock
There is no read or write lock on: z
a	b		curr executable size=2
	waitingTx size=1
y	w	2, 
z	w	3, 
a	r	3, 
b	r	3, 
Tx chosen to execute is: 2
executed ry
curr executable size=2
y	w	2, 
z	w	3, 
a	r	3, 
b	r	3, 
Tx chosen to execute is: 3
executed rz
curr executable size=2
Checking lock on dataItem: x
There is no write lock on: x
Checking lock on dataItem: x
Needed write lock
There is no read or write lock on: x
y	w	2, 
z	w	3, 
a	r	3, 
b	r	3, 
x	w	4, 
Tx chosen to execute is: 2
executed wy
last operation executd of Tx: 2
Erasing write Lock Entry for dataitem: y
Just freed up locks of Tx: 2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	4, 
Checking lock on dataItem: x
There is a a write lock on: x
curr executable size=2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	4, 
Tx chosen to execute is: 4
executed rx
curr executable size=2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	4, 
Tx chosen to execute is: 4
executed wx
last operation executd of Tx: 4
Erasing write Lock Entry for dataitem: x
Just freed up locks of Tx: 4
z	w	3, 
a	r	3, 
b	r	3, 
Checking lock on dataItem: x
There is no write lock on: x
Checking lock on dataItem: x
Needed write lock
There is no read or write lock on: x
Checking lock on dataItem: y
There is no write lock on: y
Checking lock on dataItem: y
Needed write lock
There is no read or write lock on: y
curr executable size=2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	1, 
y	w	1, 
Tx chosen to execute is: 1
executed rx
curr executable size=2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	1, 
y	w	1, 
Tx chosen to execute is: 1
executed wx
curr executable size=2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	1, 
y	w	1, 
Tx chosen to execute is: 3
executed ra
curr executable size=2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	1, 
y	w	1, 
Tx chosen to execute is: 3
executed rb
curr executable size=2
z	w	3, 
a	r	3, 
b	r	3, 
x	w	1, 
y	w	1, 
Tx chosen to execute is: 3
executed wz
last operation executd of Tx: 3
Erasing write Lock Entry for dataitem: z
Just freed up locks of Tx: 3
x	w	1, 
y	w	1, 
curr executable size=1
x	w	1, 
y	w	1, 
Tx chosen to execute is: 1
executed ry
curr executable size=1
x	w	1, 
y	w	1, 
Tx chosen to execute is: 1
executed wy
last operation executd of Tx: 1
Erasing write Lock Entry for dataitem: x
Erasing write Lock Entry for dataitem: y
Just freed up locks of Tx: 1
curr executable size=0
TX	operation	var	time
2	r		y	0
3	r		z	1
2	w		y	2
4	r		x	3
4	w		x	4
1	r		x	5
1	w		x	6
3	r		a	7
3	r		b	8
3	w		z	9
1	r		y	10
1	w		y	11
